package ${package.Controller};

import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
import com.diboot.core.vo.JsonResult;
import com.diboot.core.vo.Pagination;
import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceImplName};
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;
import java.util.List;

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Api(tags = "$!{table.comment} CURD服务")
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@Validated
@RequestMapping(value = "#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end", produces = MediaType.APPLICATION_JSON_VALUE)
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end
    @Autowired
    private ${table.serviceImplName} service;

    @ApiOperation("分页查询 $!{table.comment}  列表")
    @GetMapping("")
    public JsonResult page(@Valid ${entity} entity, Pagination pagination) throws Exception {
        LambdaQueryWrapper<${entity}> queryWrapper = super.buildLambdaQueryWrapper(entity);

        List<${entity}> list = service.getEntityList(queryWrapper, pagination);

        return JsonResult.OK(list).bindPagination(pagination);
    }

    @ApiOperation("创建$!{table.comment} ")
    @PostMapping("")
    public boolean save(@Valid @RequestBody ${entity} entity) throws Exception {
        return service.save(entity);
    }

    @ApiOperation("更新$!{table.comment} ")
    @PutMapping("/{id:\\d+}")
    public boolean update(@PathVariable Long id, @Valid @RequestBody ${entity} entity) throws Exception {
        entity.setId(id);
        return service.updateById(entity);
    }

    @ApiOperation("删除$!{table.comment} ")
    @DeleteMapping("/{id:\\d+}")
    public boolean update(@PathVariable Long id) throws Exception {
        return service.removeById(id);
    }
}
#end
